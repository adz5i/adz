// Custom exception for negative number of books sold
class NegativeBooksSoldException extends Exception {
    public NegativeBooksSoldException(String message) {
        super(message);
    }
}

// Base class Book
class Book {
    int bookNumber;
    String title;
    String author;
    String publisher;
    double price;
    int numBooksSold;

    public Book(int bookNumber, String title, String author, String publisher, double price, int numBooksSold) {
        this.bookNumber = bookNumber;
        this.title = title;
        this.author = author;
        this.publisher = publisher;
        this.price = price;
        this.numBooksSold = numBooksSold;
    }

    public void updateNumBooksSold(int soldQuantity) throws NegativeBooksSoldException {
        if (numBooksSold + soldQuantity < 0) {
            throw new NegativeBooksSoldException("Number of books sold cannot be negative.");
        }
        numBooksSold += soldQuantity;
    }
}

// Derived class HardCopy
class HardCopy extends Book {
    int numPages;
    int numCopiesSold;

    public HardCopy(int bookNumber, String title, String author, String publisher, double price,
                    int numBooksSold, int numPages, int numCopiesSold) {
        super(bookNumber, title, author, publisher, price, numBooksSold);
        this.numPages = numPages;
        this.numCopiesSold = numCopiesSold;
    }
}

// Derived class SoftCopy
class SoftCopy extends Book {
    int playingTime;
    int numCdsSold;

    public SoftCopy(int bookNumber, String title, String author, String publisher, double price,
                    int numBooksSold, int playingTime, int numCdsSold) {
        super(bookNumber, title, author, publisher, price, numBooksSold);
        this.playingTime = playingTime;
        this.numCdsSold = numCdsSold;
    }
}

// Test class
public class Test {
    public static void main(String[] args) {
        try {
            // Creating objects of HardCopy and SoftCopy
            HardCopy hardCopy1 = new HardCopy(1, "Java Programming", "John Doe", "Publisher A", 29.99, 100, 500, 200);
            SoftCopy softCopy1 = new SoftCopy(2, "Python Basics", "Jane Smith", "Publisher B", 19.99, 150, 120, 150);

            // Updating the number of books sold
            hardCopy1.updateNumBooksSold(50);
            softCopy1.updateNumBooksSold(30);

            // Trying to update with a negative value (will raise an exception)
            // hardCopy1.updateNumBooksSold(-10);

            // Displaying information
            displayBookInformation(hardCopy1);
            displayBookInformation(softCopy1);
        } catch (NegativeBooksSoldException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }

    // Displaying book information
    private static void displayBookInformation(Book book) {
        System.out.println("Book Number: " + book.bookNumber);
        System.out.println("Title: " + book.title);
        System.out.println("Author: " + book.author);
        System.out.println("Publisher: " + book.publisher);
        System.out.println("Price: $" + book.price);
        System.out.println("Number of Books Sold: " + book.numBooksSold);
        System.out.println();
    }
}
